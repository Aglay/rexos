/*
    RExOS - embedded RTOS
    Copyright (c) 2011-2014, Alexey Kramarenko
    All rights reserved.
*/

#ifndef ERROR_H
#define ERROR_H

/*
    error.h - error handling
*/

typedef enum {
    //kernel-specific
    ERROR_OK = 0,
    ERROR_IN_PROGRESS,
    ERROR_NOT_SUPPORTED,
    ERROR_NOT_FOUND,
    ERROR_NOT_ACTIVE,
    ERROR_NOT_CONFIGURED,
    ERROR_ALREADY_CONFIGURED,
    ERROR_INVALID_PARAMS,
    ERROR_INVALID_MAGIC,
    ERROR_TIMEOUT,
    ERROR_INVALID_SVC,
    ERROR_SYNC_OBJECT_DESTROYED,
    ERROR_STUB_CALLED,
    ERROR_OUT_OF_RANGE,
    ERROR_ACCESS_DENIED,
    ERROR_OVERFLOW,
    ERROR_UNDERFLOW,
    ERROR_IPC_CALL_ERROR,
    ERROR_TOO_MANY_OPEN_BLOCKS,

    ERROR_FILE_PATH_NOT_FOUND,
    ERROR_FILE_SHARING_VIOLATION,
    ERROR_FILE_ACCESS_DENIED,
    ERROR_FILE_INVALID_NAME,
    ERROR_FILE_PATH_ALREADY_EXISTS,
    ERROR_FILE_PATH_IN_USE,
    ERROR_FOLDER_NOT_EMPTY,
    ERROR_NOT_MOUNTED,
    ERROR_ALREADY_MOUNTED,

    ERROR_OUT_OF_MEMORY,
    ERROR_OUT_OF_SYSTEM_MEMORY,
    ERROR_OUT_OF_PAGED_MEMORY,
    ERROR_POOL_CORRUPTED,
    ERROR_POOL_RANGE_CHECK_FAILED,

    ERROR_UART_NOISE,
    ERROR_UART_FRAME,
    ERROR_UART_PARITY,
    ERROR_UART_BREAK,

    ERROR_USB_STALL

}ERROR_CODE;

#endif // ERROR_H
